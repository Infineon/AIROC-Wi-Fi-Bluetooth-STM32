<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="whd__network__types_8h" kind="file" language="C++">
    <compoundname>whd_network_types.h</compoundname>
    <includes refid="whd_8h" local="yes">whd.h</includes>
    <incdepgraph>
      <node id="24">
        <label>stdint.h</label>
      </node>
      <node id="21">
        <label>whd_network_types.h</label>
        <link refid="whd__network__types_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cy_result.h</label>
      </node>
      <node id="22">
        <label>whd.h</label>
        <link refid="whd_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cyhal_hw_types.h</label>
      </node>
      <node id="23">
        <label>whd_types.h</label>
        <link refid="whd__types_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cybsp.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structwhd__buffer__funcs" prot="public">whd_buffer_funcs</innerclass>
    <innerclass refid="structwhd__netif__funcs" prot="public">whd_netif_funcs</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__buffif_1ga44a64c51498b204ceef5555209e29452" prot="public" static="no" strong="no">
        <type></type>
        <name>whd_buffer_dir_t</name>
        <enumvalue id="group__buffif_1gga44a64c51498b204ceef5555209e29452a3d24bf5423cc175fe6ee80bd359dc5bd" prot="public">
          <name>WHD_NETWORK_TX</name>
          <briefdescription>
<para>Transmit direction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__buffif_1gga44a64c51498b204ceef5555209e29452a11af875b5bd8b18c4a0c878af601d1ca" prot="public">
          <name>WHD_NETWORK_RX</name>
          <briefdescription>
<para>Recieve direction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates transmit/receive direction that the packet buffer has been used for. </para>
        </briefdescription>
        <detaileddescription>
<para>This is needed if tx/rx pools are separate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_network_types.h" line="35" column="1" bodyfile="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_network_types.h" bodystart="34" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__netif_1gafdfee8583f09d475ae4eafee5386f1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="whd__types_8h_1add62f4b5040a2451e23869d2f9e1ae05" kindref="member">whd_result_t</ref></type>
        <definition>whd_result_t whd_network_send_ethernet_data</definition>
        <argsstring>(whd_interface_t ifp, whd_buffer_t buffer)</argsstring>
        <name>whd_network_send_ethernet_data</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>whd_buffer_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>To send an ethernet frame to WHD (called by the Network Stack) </para>
        </briefdescription>
        <detaileddescription>
<para>This function takes ethernet data from the network stack and queues it for transmission over the wireless network. The function can be called from any thread context as it is thread safe, however it must not be called from interrupt context since it might get blocked while waiting for a lock on the transmit queue.</para>
<para>This function returns immediately after the packet has been queued for transmit, NOT after it has been transmitted. Packet buffers passed to the WHD are released inside the WHD once they have been transmitted.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the packet buffer to be sent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_network_types.h" line="209" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Prototypes of functions corresponding to Buffer and Network Interface. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides prototypes for functions which allows different functionalities related to:<itemizedlist>
<listitem><para>Buffer Interface: Allocate and release a packet buffer, Retrieve the current pointer and size of a packet buffer, etc.</para>
</listitem><listitem><para>Network Interface: Called by WHD to pass received data to the network stack, to send an ethernet frame to WHD, etc. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_network_types.h"/>
  </compounddef>
</doxygen>
