<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__wifisoftap" kind="group">
    <compoundname>wifisoftap</compoundname>
    <title>WHD Wi-Fi SoftAP API</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wifisoftap_1ga647aebc1d86708017fd11029e2e1a51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_init_ap</definition>
        <argsstring>(whd_interface_t ifp, whd_ssid_t *ssid, whd_security_t auth_type, const uint8_t *security_key, uint8_t key_length, uint8_t channel)</argsstring>
        <name>whd_wifi_init_ap</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type><ref refid="structwhd__ssid__t" kindref="compound">whd_ssid_t</ref> *</type>
          <declname>ssid</declname>
        </param>
        <param>
          <type><ref refid="whd__types_8h_1aaeeea5666743710aa4f01ff264b27059" kindref="member">whd_security_t</ref></type>
          <declname>auth_type</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>security_key</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>key_length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Initialises an infrastructure WiFi network (SoftAP) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ssid</parametername>
</parameternamelist>
<parameterdescription>
<para>A null terminated string containing the SSID name of the network to join </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>security_key</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte array containing the cleartext security key for the network </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the security_key in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>802.11 channel number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if successfully initialises an AP Error code if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga3c9aa99add3f6a6d13e9092bd6e1246b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_start_ap</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_wifi_start_ap</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Start the infrastructure WiFi network (SoftAP) using the parameter set by <ref refid="group__wifisoftap_1ga647aebc1d86708017fd11029e2e1a51c" kindref="member">whd_wifi_init_ap()</ref> and optionaly by <ref refid="group__wifiutilities_1gaaf7be7d8099507426f52ecff8f716543" kindref="member">whd_wifi_manage_custom_ie()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>WHD_SUCCESS if successfully creates an AP Error code if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga2c6c28512678dc57dabb641c41e30d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_stop_ap</definition>
        <argsstring>(whd_interface_t ifp)</argsstring>
        <name>whd_wifi_stop_ap</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <briefdescription>
<para>Stops an existing infrastructure WiFi network. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if the AP is successfully stopped or if the AP has not yet been brought up Error code if an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga32982684d093a173a6e578856b581d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_ap_get_max_assoc</definition>
        <argsstring>(whd_interface_t ifp, uint32_t *max_assoc)</argsstring>
        <name>whd_wifi_ap_get_max_assoc</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>max_assoc</declname>
        </param>
        <briefdescription>
<para>Get the maximum number of associations supported by AP interfaces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_assoc</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of associations supported by Soft AP interfaces.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if the maximum number of associated clients was successfully read WHD_ERROR if the maximum number of associated clients was not successfully read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga9e974ab0fcc24698d01a5abc3e2c1dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_get_associated_client_list</definition>
        <argsstring>(whd_interface_t ifp, void *client_list_buffer, uint16_t buffer_length)</argsstring>
        <name>whd_wifi_get_associated_client_list</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>client_list_buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>buffer_length</declname>
        </param>
        <briefdescription>
<para>Gets the current number of active connections. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_list_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to store list of associated clients </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of client list buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if the active connections was successfully read WHD_ERROR if the active connections was not successfully read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1gad9ad2649c18db8773351a5938e7930e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_deauth_sta</definition>
        <argsstring>(whd_interface_t ifp, whd_mac_t *mac, whd_dot11_reason_code_t reason)</argsstring>
        <name>whd_wifi_deauth_sta</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type><ref refid="structwhd__mac__t" kindref="compound">whd_mac_t</ref> *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type><ref refid="whd__types_8h_1ac81b31559ee1db82f01e8acfb8eea55d" kindref="member">whd_dot11_reason_code_t</ref></type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Deauthenticates a STA which may or may not be associated to SoftAP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mac</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a variable containing the MAC address to which the deauthentication will be sent NULL mac address will deauthenticate all the associated STAs</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>Deauthentication reason code</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS On successful deauthentication of the other STA WHD_ERROR If an error occurred </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga95c40af4be45d119b737c0113d9a038e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_get_ap_info</definition>
        <argsstring>(whd_interface_t ifp, whd_bss_info_t *ap_info, whd_security_t *security)</argsstring>
        <name>whd_wifi_get_ap_info</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>whd_bss_info_t *</type>
          <declname>ap_info</declname>
        </param>
        <param>
          <type><ref refid="whd__types_8h_1aaeeea5666743710aa4f01ff264b27059" kindref="member">whd_security_t</ref> *</type>
          <declname>security</declname>
        </param>
        <briefdescription>
<para>Retrieves AP information. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ap_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns a whd_bss_info_t structure containing AP details </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>security</parametername>
</parameternamelist>
<parameterdescription>
<para>Authentication type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS if the AP info was successfully retrieved Error code if the AP info was not successfully retrieved </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1gaf2758fcc1028704d801b16d77b96a345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_ap_set_beacon_interval</definition>
        <argsstring>(whd_interface_t ifp, uint16_t interval)</argsstring>
        <name>whd_wifi_ap_set_beacon_interval</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Set the beacon interval. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the value needs to be set before ap_start in order to beacon interval to take effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>Beacon interval in time units (Default: 100 time units = 102.4 ms)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wifisoftap_1ga57c57ad4d5acf499e90ff8db020fa2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_ap_set_dtim_interval</definition>
        <argsstring>(whd_interface_t ifp, uint16_t interval)</argsstring>
        <name>whd_wifi_ap_set_dtim_interval</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
<para>Set the DTIM interval. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the value needs to be set before ap_start in order to DTIM interval to take effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>DTIM interval, in unit of beacon interval</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/HsiehYuanPin/01_SRC/whd/inc/whd_wifi_api.h" line="658" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wi-Fi APIs to perform SoftAP related functionalities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
